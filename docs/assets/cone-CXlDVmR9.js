import"./modulepreload-polyfill-B5Qt9EMX.js";import{C,V as r,E as D,c as A,d as j,e as z,W as V,j as I,k as F,l as K,f as W,g as L,m as q,n as B,D as G,B as H,o as b,i as O,L as T}from"./three.module-aOtbklaL.js";const a=new D(0,0,0,"YXZ"),d=new r,R={type:"change"},U={type:"lock"},Y={type:"unlock"},E=.002,k=Math.PI/2;class Q extends C{constructor(t,n=null){super(t,n),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=X.bind(this),this._onPointerlockChange=N.bind(this),this._onPointerlockError=Z.bind(this),this.domElement!==null&&this.connect(this.domElement)}connect(t){super.connect(t),this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(t){return t.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(t){if(this.enabled===!1)return;const n=this.object;d.setFromMatrixColumn(n.matrix,0),d.crossVectors(n.up,d),n.position.addScaledVector(d,t)}moveRight(t){if(this.enabled===!1)return;const n=this.object;d.setFromMatrixColumn(n.matrix,0),n.position.addScaledVector(d,t)}lock(t=!1){this.domElement.requestPointerLock({unadjustedMovement:t})}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function X(e){if(this.enabled===!1||this.isLocked===!1)return;const t=this.object;a.setFromQuaternion(t.quaternion),a.y-=e.movementX*E*this.pointerSpeed,a.x-=e.movementY*E*this.pointerSpeed,a.x=Math.max(k-this.maxPolarAngle,Math.min(k-this.minPolarAngle,a.x)),t.quaternion.setFromEuler(a),this.dispatchEvent(R)}function N(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(U),this.isLocked=!0):(this.dispatchEvent(Y),this.isLocked=!1)}function Z(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const s=new A;s.background=new j(16777215);const c=new z(75,window.innerWidth/window.innerHeight,.1,1e3);c.position.set(0,1.6,5);c.lookAt(0,0,0);const w=new V({antialias:!0});w.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(w.domElement);const m=new Q(c,document.body);s.add(m.getObject());const P=document.getElementById("overlay");m.addEventListener("lock",()=>{P.style.display="none"});m.addEventListener("unlock",()=>{P.style.display="flex"});document.body.addEventListener("click",()=>{m.lock()});s.add(new I(8947848));const x=new F(16777215,1);x.position.set(5,5,5);s.add(x);const M=new K(1,2,32);M.center();const J=new W({color:16733474}),$=new L(M,J);s.add($);const S=new L(new q(100,100),new B({color:15790320,side:G}));S.rotation.x=-Math.PI/2;s.add(S);const f=5,ee=new Float32Array([0,0,0,f,0,0,0,0,0,0,f,0,0,0,0,0,0,f]),te=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]),p=new H;p.setAttribute("position",new b(ee,3));p.setAttribute("color",new b(te,3));const oe=new O({vertexColors:!0}),ne=new T(p,oe);s.add(ne);const o={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1};window.addEventListener("keydown",e=>{e.code==="KeyW"&&(o.forward=!0),e.code==="KeyS"&&(o.backward=!0),e.code==="KeyA"&&(o.left=!0),e.code==="KeyD"&&(o.right=!0),e.code==="Space"&&(o.up=!0),e.code==="ShiftLeft"&&(o.down=!0)});window.addEventListener("keyup",e=>{e.code==="KeyW"&&(o.forward=!1),e.code==="KeyS"&&(o.backward=!1),e.code==="KeyA"&&(o.left=!1),e.code==="KeyD"&&(o.right=!1),e.code==="Space"&&(o.up=!1),e.code==="ShiftLeft"&&(o.down=!1)});const g=5;let v=performance.now();const i=new r,l=new r,h=new r,y=new r;function _(){requestAnimationFrame(_);const e=performance.now(),t=(e-v)/1e3;if(v=e,m.isLocked){i.set(0,0,0),l.set(0,0,0),o.forward&&(i.z-=1),o.backward&&(i.z+=1),o.left&&(i.x-=1),o.right&&(i.x+=1),o.up&&(l.y+=1),o.down&&(l.y-=1);const n=m.getObject();if(i.lengthSq()>0){i.normalize(),c.getWorldDirection(h),h.y=0,h.normalize(),y.crossVectors(h,new r(0,1,0)).normalize();const u=new r;u.addScaledVector(h,-i.z),u.addScaledVector(y,i.x),u.normalize().multiplyScalar(g*t),n.position.add(u)}l.lengthSq()>0&&(l.normalize().multiplyScalar(g*t),n.position.add(l))}w.render(s,c)}_();window.addEventListener("resize",()=>{const e=window.innerWidth,t=window.innerHeight;w.setSize(e,t),c.aspect=e/t,c.updateProjectionMatrix()});
