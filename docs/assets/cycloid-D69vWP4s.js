import"./modulepreload-polyfill-B5Qt9EMX.js";import{c as R,O as q,W as V,V as o,B as p,p as G,i as P,q as j,r as A,n as D,g as Z}from"./three.module-DDfKJFGn.js";const r=new R,t=new q(-10,10,5,-5,.1,100);t.position.z=10;const k=document.getElementById("webgl"),g=new V({canvas:k,antialias:!0});g.setSize(window.innerWidth,window.innerHeight);g.setPixelRatio(window.devicePixelRatio);g.setClearColor(16777215);const H=document.getElementById("distanceInput"),i=document.getElementById("slider"),L=document.getElementById("tInput"),E=document.getElementById("angleSlider"),x=document.getElementById("thetaInput"),n=1;let T=parseFloat(H.value);const W=Math.PI*4,J=.05;function K(e){return new o(n*e,n,-.01)}let m,w,h,y,z,C=[];function b(){[m,w,h,y,z].forEach(a=>{a&&r.remove(a)});const e=window.innerWidth/window.innerHeight,s=n*(W+1),d=s/e;t.left=t.left=-1*2,t.right=s,t.right=s,t.top=d/2,t.bottom=-d/2,t.updateProjectionMatrix(),g.setSize(window.innerWidth,window.innerHeight);const u=new p().setFromPoints([new o(t.left,0,0),new o(s,0,0)]);z=new G(u,new P({color:0})),r.add(z);const F=new p().setFromPoints([]);m=new G(F,new P({color:255})),r.add(m);const v=[],f=64;for(let a=0;a<=f;a++){const M=a/f*Math.PI*2;v.push(new o(Math.cos(M)*n,Math.sin(M)*n,0))}const S=new p().setFromPoints(v);w=new j(S,new P({color:0})),r.add(w);const c=new A(.1*n,16),B=new D({color:16711680});h=new Z(c,B),r.add(h);const I=new p().setFromPoints([new o,new o]);y=new G(I,new P({color:0})),r.add(y),i.max=W.toFixed(2),L.max=W.toFixed(2),l(parseFloat(i.value))}function l(e){const s=parseFloat(x.value),d=s*Math.PI/180;T=parseFloat(H.value),i.value=e.toFixed(2),L.value=e.toFixed(2),E.value=s.toFixed(0);const u=K(e);w.position.copy(u),w.rotation.z=-e;const F=-e+d-Math.PI/2,v=new o(Math.cos(F),Math.sin(F),0).multiplyScalar(n*T);h.position.copy(u.clone().add(v));const f=[u.clone().setZ(0),h.position];y.geometry.setFromPoints(f),C=[];for(let c=0;c<=e;c+=J){const B=n*c,I=-c+d-Math.PI/2,a=new o(Math.cos(I),Math.sin(I),0).multiplyScalar(n*T),M=new o(B,n,0).add(a);C.push(M)}const S=new p().setFromPoints(C);m.geometry.dispose(),m.geometry=S}function N(){l(parseFloat(i.value))}function Q(){l(parseFloat(L.value))}function U(){x.value=E.value,l(parseFloat(i.value))}function X(){E.value=x.value,l(parseFloat(i.value))}i.addEventListener("input",N);L.addEventListener("input",Q);E.addEventListener("input",U);x.addEventListener("input",X);H.addEventListener("input",()=>l(parseFloat(i.value)));window.addEventListener("resize",()=>b());b();function O(){requestAnimationFrame(O),g.render(r,t)}O();
