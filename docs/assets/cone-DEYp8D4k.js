import"./modulepreload-polyfill-B5Qt9EMX.js";import{c as S,d as v,e as E,W as k,a as A,E as W,l as K,f as D,g as y,m as P,n as z,D as C,B as G,o as p,i as B,L as F,j as V,k as q,V as d}from"./three.module-aOtbklaL.js";const a=new S;a.background=new v(16777215);const i=new E(75,window.innerWidth/window.innerHeight,.1,1e3),w=new k({antialias:!0});document.body.appendChild(w.domElement);w.setSize(window.innerWidth,window.innerHeight);i.position.set(0,1.6,5);let u=!1,c=new A;const r=new W(0,0,0,"YXZ"),n={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1},H=2;window.addEventListener("mousedown",e=>{u=!0,c.set(e.clientX,e.clientY)});window.addEventListener("mouseup",()=>{u=!1});window.addEventListener("mousemove",e=>{if(!u)return;const l=e.clientX-c.x,o=e.clientY-c.y;c.set(e.clientX,e.clientY);const s=.002;r.setFromQuaternion(i.quaternion),r.y-=l*s,r.x-=o*s,r.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,r.x)),i.quaternion.setFromEuler(r)});window.addEventListener("keydown",e=>{e.code==="KeyW"&&(n.forward=!0),e.code==="KeyS"&&(n.backward=!0),e.code==="KeyA"&&(n.left=!0),e.code==="KeyD"&&(n.right=!0),e.code==="Space"&&(n.up=!0),e.code==="ShiftLeft"&&(n.down=!0)});window.addEventListener("keyup",e=>{e.code==="KeyW"&&(n.forward=!1),e.code==="KeyS"&&(n.backward=!1),e.code==="KeyA"&&(n.left=!1),e.code==="KeyD"&&(n.right=!1),e.code==="Space"&&(n.up=!1),e.code==="ShiftLeft"&&(n.down=!1)});const g=new K(1,2,32);g.center();const X=new D({color:16733474}),Y=new y(g,X);a.add(Y);const M=new y(new P(100,100),new z({color:15790320,side:C}));M.rotation.x=-Math.PI/2;a.add(M);const f=5,I=new Float32Array([0,0,0,f,0,0,0,0,0,0,f,0,0,0,0,0,0,f]),j=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]),m=new G;m.setAttribute("position",new p(I,3));m.setAttribute("color",new p(j,3));const Q=new B({vertexColors:!0}),R=new F(m,Q);a.add(R);a.add(new V(8947848));const x=new q(16777215,1);x.position.set(5,5,5);a.add(x);let h=performance.now();function L(){requestAnimationFrame(L);const e=performance.now(),l=(e-h)/1e3;h=e;const o=new d,s=new d,b=new d(0,1,0);i.getWorldDirection(o),o.normalize(),s.crossVectors(o,b).normalize();const t=new d;n.forward&&t.add(o),n.backward&&t.sub(o),n.left&&t.sub(s),n.right&&t.add(s),n.up&&(t.y+=1),n.down&&(t.y-=1),t.negate(),t.lengthSq()>0&&(t.normalize().multiplyScalar(H*l),i.position.add(t)),w.render(a,i)}L();window.addEventListener("resize",()=>{i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),w.setSize(window.innerWidth,window.innerHeight)});
