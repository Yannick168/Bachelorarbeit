import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as M,V as m,E as _,c as C,d as D,e as A,W as j,j as z,k as V,g as y,l as I,f as W,m as F,n as K,D as q,B,o as b,L as H,i as G}from"./three.module-aOtbklaL.js";const a=new _(0,0,0,"YXZ"),c=new m,O={type:"change"},T={type:"lock"},R={type:"unlock"},p=.002,E=Math.PI/2;class U extends M{constructor(o,n=null){super(o,n),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=Y.bind(this),this._onPointerlockChange=Q.bind(this),this._onPointerlockError=X.bind(this),this.domElement!==null&&this.connect(this.domElement)}connect(o){super.connect(o),this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(o){return o.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(o){if(this.enabled===!1)return;const n=this.object;c.setFromMatrixColumn(n.matrix,0),c.crossVectors(n.up,c),n.position.addScaledVector(c,o)}moveRight(o){if(this.enabled===!1)return;const n=this.object;c.setFromMatrixColumn(n.matrix,0),n.position.addScaledVector(c,o)}lock(o=!1){this.domElement.requestPointerLock({unadjustedMovement:o})}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function Y(e){if(this.enabled===!1||this.isLocked===!1)return;const o=this.object;a.setFromQuaternion(o.quaternion),a.y-=e.movementX*p*this.pointerSpeed,a.x-=e.movementY*p*this.pointerSpeed,a.x=Math.max(E-this.maxPolarAngle,Math.min(E-this.minPolarAngle,a.x)),o.quaternion.setFromEuler(a),this.dispatchEvent(O)}function Q(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(T),this.isLocked=!0):(this.dispatchEvent(R),this.isLocked=!1)}function X(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const r=new C;r.background=new D(16777215);const s=new A(75,window.innerWidth/window.innerHeight,.1,1e3);s.position.set(0,1.6,5);const w=new j({antialias:!0});w.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(w.domElement);const l=new U(s,document.body);r.add(l.getObject());const L=document.getElementById("overlay");l.addEventListener("lock",()=>L.style.display="none");l.addEventListener("unlock",()=>L.style.display="flex");document.body.addEventListener("click",()=>l.lock());r.add(new z(8947848));const P=new V(16777215,1);P.position.set(5,5,5);r.add(P);const N=new y(new I(1,2,32).center(),new W({color:16733474}));r.add(N);const S=new y(new F(100,100),new K({color:15790320,side:q}));S.rotation.x=-Math.PI/2;r.add(S);const Z=new Float32Array([0,0,0,5,0,0,0,0,0,0,5,0,0,0,0,0,0,5]),J=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]),f=new B;f.setAttribute("position",new b(Z,3));f.setAttribute("color",new b(J,3));const $=new H(f,new G({vertexColors:!0}));r.add($);const t={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1};window.addEventListener("keydown",e=>{e.code==="KeyW"&&(t.forward=!0),e.code==="KeyS"&&(t.backward=!0),e.code==="KeyA"&&(t.left=!0),e.code==="KeyD"&&(t.right=!0),e.code==="Space"&&(t.up=!0),e.code==="ShiftLeft"&&(t.down=!0)});window.addEventListener("keyup",e=>{e.code==="KeyW"&&(t.forward=!1),e.code==="KeyS"&&(t.backward=!1),e.code==="KeyA"&&(t.left=!1),e.code==="KeyD"&&(t.right=!1),e.code==="Space"&&(t.up=!1),e.code==="ShiftLeft"&&(t.down=!1)});const k=5;let g=performance.now();const u=new m,v=new m,i=new m,d=new m;function x(){requestAnimationFrame(x);const e=performance.now(),o=(e-g)/1e3;if(g=e,l.isLocked){i.set(0,0,0),d.set(0,0,0),t.forward&&(i.z-=1),t.backward&&(i.z+=1),t.left&&(i.x-=1),t.right&&(i.x+=1),t.up&&(d.y+=1),t.down&&(d.y-=1);const n=l.getObject();if(i.lengthSq()>0){i.normalize(),s.getWorldDirection(u),u.normalize(),v.crossVectors(u,s.up).normalize();const h=new m;h.addScaledVector(u,i.z),h.addScaledVector(v,i.x),h.multiplyScalar(k*o),n.position.add(h)}d.lengthSq()>0&&(d.normalize().multiplyScalar(k*o),n.position.add(d))}w.render(r,s)}x();window.addEventListener("resize",()=>{s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),w.setSize(window.innerWidth,window.innerHeight)});
