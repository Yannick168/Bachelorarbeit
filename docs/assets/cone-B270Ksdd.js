import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as y,V as p,E as P,c as M,d as x,e as S,W as _,j as C,k as A,l as D,f as j,g as E,m as F,n as I,D as K,B as q,o as k,i as V,L as W}from"./three.module-aOtbklaL.js";const a=new P(0,0,0,"YXZ"),c=new p,z={type:"change"},G={type:"lock"},B={type:"unlock"},u=.002,f=Math.PI/2;class H extends y{constructor(t,i=null){super(t,i),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=O.bind(this),this._onPointerlockChange=T.bind(this),this._onPointerlockError=R.bind(this),this.domElement!==null&&this.connect(this.domElement)}connect(t){super.connect(t),this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(t){return t.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(t){if(this.enabled===!1)return;const i=this.object;c.setFromMatrixColumn(i.matrix,0),c.crossVectors(i.up,c),i.position.addScaledVector(c,t)}moveRight(t){if(this.enabled===!1)return;const i=this.object;c.setFromMatrixColumn(i.matrix,0),i.position.addScaledVector(c,t)}lock(t=!1){this.domElement.requestPointerLock({unadjustedMovement:t})}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function O(e){if(this.enabled===!1||this.isLocked===!1)return;const t=this.object;a.setFromQuaternion(t.quaternion),a.y-=e.movementX*u*this.pointerSpeed,a.x-=e.movementY*u*this.pointerSpeed,a.x=Math.max(f-this.maxPolarAngle,Math.min(f-this.minPolarAngle,a.x)),t.quaternion.setFromEuler(a),this.dispatchEvent(z)}function T(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(G),this.isLocked=!0):(this.dispatchEvent(B),this.isLocked=!1)}function R(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const s=new M;s.background=new x(16777215);const r=new S(75,window.innerWidth/window.innerHeight,.1,1e3);r.position.set(0,1.6,5);r.lookAt(0,0,0);const l=new _({antialias:!0});l.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(l.domElement);const d=new H(r,document.body);s.add(d.getObject());document.body.addEventListener("click",()=>{d.lock()});s.add(new C(8947848));const g=new A(16777215,1);g.position.set(5,5,5);s.add(g);const v=new D(1,2,32);v.center();const Q=new j({color:16733474}),U=new E(v,Q);s.add(U);const b=new E(new F(100,100),new I({color:15790320,side:K}));b.rotation.x=-Math.PI/2;s.add(b);const m=5,Y=new Float32Array([0,0,0,m,0,0,0,0,0,0,m,0,0,0,0,0,0,m]),X=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]),h=new q;h.setAttribute("position",new k(Y,3));h.setAttribute("color",new k(X,3));const N=new V({vertexColors:!0}),Z=new W(h,N);s.add(Z);const o={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1};window.addEventListener("keydown",e=>{e.code==="KeyW"&&(o.forward=!0),e.code==="KeyS"&&(o.backward=!0),e.code==="KeyA"&&(o.left=!0),e.code==="KeyD"&&(o.right=!0),e.code==="Space"&&(o.up=!0),e.code==="ShiftLeft"&&(o.down=!0)});window.addEventListener("keyup",e=>{e.code==="KeyW"&&(o.forward=!1),e.code==="KeyS"&&(o.backward=!1),e.code==="KeyA"&&(o.left=!1),e.code==="KeyD"&&(o.right=!1),e.code==="Space"&&(o.up=!1),e.code==="ShiftLeft"&&(o.down=!1)});const n=new p,J=5;let w=performance.now();function L(){requestAnimationFrame(L);const e=performance.now(),t=(e-w)/1e3;w=e,d.isLocked&&(n.set(0,0,0),o.forward&&(n.z-=1),o.backward&&(n.z+=1),o.left&&(n.x-=1),o.right&&(n.x+=1),o.up&&(n.y+=1),o.down&&(n.y-=1),n.lengthSq()>0&&(n.normalize(),n.applyQuaternion(r.quaternion),n.multiplyScalar(J*t),d.getObject().position.add(n))),l.render(s,r)}L();window.addEventListener("resize",()=>{const e=window.innerWidth,t=window.innerHeight;l.setSize(e,t),r.aspect=e/t,r.updateProjectionMatrix()});
