import"./modulepreload-polyfill-B5Qt9EMX.js";import{S as he,P as pe,W as ge,o as ue,p as me,H as we,f as oe,B as be,F as Me,l as te,a as Fe,b as ve,c as se,L as Ee,d as Ie,e as Se,G as xe,q as ke,V as Z}from"./three.module-e7rftcMR.js";import{O as Ce}from"./OrbitControls-DfK9pJJV.js";const Ae="/Bachelorarbeit/assets/pcell_finished-C9W2GnWN.fe",y=new he,m=new pe(45,window.innerWidth/window.innerHeight,.1,1e3);m.position.set(2,2,3);const P=new ge({antialias:!0});P.setSize(window.innerWidth,window.innerHeight);P.setClearColor(16777215);P.toneMapping=ue;P.toneMappingExposure=1.6;document.body.appendChild(P.domElement);const _=new Ce(m,P.domElement);_.enableDamping=!0;const ye=new me(16777215,8,0,2);m.add(ye);y.add(m);const ce=new we(16777215,7829367,1);y.add(ce);y.add(new oe(16777215,.2));window.addEventListener("resize",()=>{m.aspect=window.innerWidth/window.innerHeight,m.updateProjectionMatrix(),P.setSize(window.innerWidth,window.innerHeight)});const K=/^(vertices|edges|faces|facets|bodies)\b/i,v=d=>/^[+-]?\d+$/.test(d),U=d=>/^-?\d+$/.test(d),A=d=>/^[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:[eE][+-]?\d+)?$/.test(d),D=d=>d.replace(/\/\*.*?\*\//g,"").trim(),ne=/\(\s*([+-]?(?:\d*\.\d+|\d+\.?\d*)(?:[eE][+-]?\d+)?)\s+([+-]?(?:\d*\.\d+|\d+\.?\d*)(?:[eE][+-]?\d+)?)\s+([+-]?(?:\d*\.\d+|\d+\.?\d*)(?:[eE][+-]?\d+)?)\s*\)/,Le=/boundary\s+(\d+)/i;function Re(d){const f=d.split(/\r?\n/),l=f.map(t=>t.trim());let g=1,x=.55;for(const t of l){const c=t.match(/^\s*PARAMETER\s+RMAX\s*=\s*([^\s]+)/i);c&&A(c[1])&&(g=parseFloat(c[1]));const n=t.match(/^\s*PARAMETER\s+ZMAX\s*=\s*([^\s]+)/i);n&&A(n[1])&&(x=parseFloat(n[1]))}const a={vertices:[],edges:[],faces:[],facets:[]};for(let t=0;t<l.length;t++)if(K.test(l[t])){const c=l[t].toLowerCase().split(/\s+/)[0];c in a&&a[c].push(t)}const L=t=>{let c=l.length;for(let n=t+1;n<l.length;n++)if(K.test(l[n])){c=n;break}return f.slice(t+1,c)},k=[],h={},C=(t,c,n,r)=>{if(h[t]!==void 0)return;const o=k.length;h[t]=o,k.push([c,n,r])};if(a.vertices.length){const t=L(a.vertices[0]);for(const c of t){if(!c.trim())continue;const n=D(c);if(n){const s=n.split(/\s+/);if(s.length>=4&&v(s[0])&&A(s[1])&&A(s[2])&&A(s[3])){C(parseInt(s[0],10),parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3]));continue}}const r=c.match(/^\s*(\d+)\b/),o=c.match(ne);if(r&&o){const s=parseInt(r[1],10),b=parseFloat(o[1]),I=parseFloat(o[2]),j=parseFloat(o[3]);C(s,b,I,j);continue}const w=D(c);if(w){const s=w.split(/\s+/);if(s.length>=2&&v(s[0])&&A(s[1])){const b=parseInt(s[0],10),I=parseFloat(s[1]),j=c.match(Le);if(j){const z=parseInt(j[1],10),O=g*Math.cos(I),S=g*Math.sin(I),R=z===1?x:z===2?-x:0;C(b,O,S,R);continue}}}}}else for(const t of f){if(!t.trim())continue;const n=D(t).split(/\s+/);if(n.length>=4&&v(n[0])&&A(n[1])&&A(n[2])&&A(n[3])){C(parseInt(n[0],10),parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3]));continue}const r=t.match(/^\s*(\d+)\b/),o=t.match(ne);if(r&&o){const w=parseInt(r[1],10);C(w,parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]))}}const T={},H=t=>{for(const c of t){const n=D(c);if(!n)continue;const r=n.split(/\s+/);if(r.length>=3&&v(r[0])&&v(r[1])&&v(r[2])){const o=parseInt(r[0],10),w=parseInt(r[1],10),s=parseInt(r[2],10),b=h[w],I=h[s];if(b===void 0||I===void 0)continue;T[o]=[b,I]}}};if(a.edges.length)for(const t of a.edges)H(L(t));else{const t=a.faces[0]??a.facets[0]??l.length;let c=0;for(let o=t-1;o>=0;o--)if(K.test(l[o])){c=o;break}const n=f.slice(c,t),r=[];for(const o of n){const w=D(o),s=w.split(/\s+/);if(s.length>=3&&v(s[0])&&v(s[1])&&v(s[2])){if(s.length>=4&&v(s[3]))continue;r.push(w)}}H(r)}const E=[],ie=[...a.faces||[],...a.facets||[]];function N(t,c){return`${t}->${c}`}for(const t of ie){const c=L(t);for(const n of c){const r=D(n);if(!r)continue;const o=r.split(/\s+/);if(o.length>=4&&v(o[0])&&U(o[1])&&U(o[2])&&U(o[3])){const w=parseInt(o[0],10),s=[];for(let e=1;e<o.length&&U(o[e]);e++)s.push(parseInt(o[e],10));if(s.length<3)continue;const b=[],I=[];let j=!0;for(const e of s){const i=Math.abs(e),p=T[i];if(!p){j=!1;break}I.push([p[0],p[1]]),b.push(e<0?[p[1],p[0]]:[p[0],p[1]])}if(!j)continue;const z=new Set;for(const[e,i]of b)z.add(e),z.add(i);const O=[...z];if(O.length===3){const e=new Map;for(const[u,F]of I)e.has(u)||e.set(u,new Set),e.has(F)||e.set(F,new Set),e.get(u).add(F),e.get(F).add(u);const i=O[0],p=[...e.get(i)??[]];if(p.length!==2)continue;const[$,G]=p,V=new Set(b.map(([u,F])=>N(u,F))),J=[i,$,G],Q=[i,G,$],ee=u=>{let F=0;return V.has(N(u[0],u[1]))&&F++,V.has(N(u[1],u[2]))&&F++,V.has(N(u[2],u[0]))&&F++,F},de=ee(J),fe=ee(Q)>de?Q:J;E.push({faceId:w,edgeIds:s,tris:[fe]});continue}const S=new Map,R=new Map,W=new Map;for(const[e,i]of b)S.has(e)||S.set(e,[]),S.get(e).push(i),W.set(e,(W.get(e)??0)+1),R.set(i,(R.get(i)??0)+1),R.has(e)||R.set(e,R.get(e)??0),W.has(i)||W.set(i,W.get(i)??0);let X=O[0];for(const e of O){const i=R.get(e)??0;if((W.get(e)??0)>i){X=e;break}}const M=[X];let B=X;const re=b.length;let le=0;for(;le++<re+5;){const e=S.get(B)??[];if(e.length){const i=e.shift();if(M.push(i),B=i,B===X)break}else{let i=!1;for(const[p,$]of S){const G=$.indexOf(B);if(G>=0){$.splice(G,1),S.has(B)||S.set(B,[]),S.get(B).push(p);const V=p;M.push(V),B=V,i=!0;break}}if(!i)break}}if(M.length>=2&&M[0]===M[M.length-1]&&M.pop(),new Set(M).size<3)continue;const q=[];for(let e=1;e<M.length-1;e++){const i=[M[0],M[e],M[e+1]];new Set(i).size===3&&q.push(i)}if(!q.length)continue;E.push({faceId:w,edgeIds:s,tris:q})}}}let Y=0;for(const t of E)Y+=t.tris.length;return console.group("%cFE-Parser","color:#06b; font-weight:bold;"),console.log("RMAX, ZMAX:",g,x),console.log("Vertices:",k.length),console.log("Edges:",Object.keys(T).length),console.log("Faces (Loops):",E.length,"→ Triangles:",Y),console.groupEnd(),{vertices:k,faces:E,vertexIdToIndex:h}}function Be(d){const f=new be,l=[];for(const C of d.faces)for(const T of C.tris)for(const H of T){const E=d.vertices[H];E&&l.push(E[0],E[1],E[2])}f.setAttribute("position",new Me(l,3)),f.computeVertexNormals();const g=new te({color:16711680,side:Fe,metalness:0,roughness:.35}),x=new te({color:6710886,side:ve,metalness:0,roughness:.35}),a=new se(f,g),L=new se(f,x),k=new Ee(new Ie(f),new Se({color:0})),h=new xe;return h.add(a,L,k),h}function Pe(d){const f=new ke().setFromObject(d),l=f.getSize(new Z),g=f.getCenter(new Z),a=(Math.max(l.x,l.y,l.z)*.6+1e-6)/Math.tan(m.fov*Math.PI/360);m.position.copy(g.clone().add(new Z(a,a,a))),m.near=Math.max(.01,a*.01),m.far=Math.max(1e3,a*10),m.updateProjectionMatrix(),_.target.copy(g),_.update()}async function je(){const f=new URLSearchParams(location.search).get("fe"),l=f?"/Bachelorarbeit/"+f:Ae,g=await fetch(l);if(!g.ok)throw new Error(`Konnte ${l} nicht laden (${g.status})`);const x=await g.text(),a=Re(x);let L=0;for(const h of a.faces)L+=h.tris.length;console.clear(),console.group("%cFE-Daten","color:#0a6; font-weight:bold;"),console.log("Vertices:",a.vertices.length),console.log("Faces (Loops):",a.faces.length,"→ Triangles:",L),console.table(a.faces.slice(0,50).map(h=>({faceId:h.faceId,edges:h.edgeIds.join(" "),tris:h.tris.map(C=>C.join(",")).join(" | ")}))),console.groupEnd();const k=Be({vertices:a.vertices,faces:a.faces});y.clear(),y.add(m),y.add(ce),y.add(new oe(16777215,.2)),y.add(k),Pe(k)}je().catch(d=>console.error(d));function ae(){requestAnimationFrame(ae),_.update(),P.render(y,m)}ae();
