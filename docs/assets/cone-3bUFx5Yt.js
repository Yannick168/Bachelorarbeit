import"./modulepreload-polyfill-B5Qt9EMX.js";import{C as y,V as k,E as M,c as x,d as _,e as C,W as S,j as A,k as D,l as j,f as F,g as p,m as I,n as K,D as z,B as V,o as g,i as W,L as q}from"./three.module-aOtbklaL.js";const r=new M(0,0,0,"YXZ"),c=new k,G={type:"change"},B={type:"lock"},H={type:"unlock"},u=.002,w=Math.PI/2;class R extends y{constructor(e,i=null){super(e,i),this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.pointerSpeed=1,this._onMouseMove=T.bind(this),this._onPointerlockChange=O.bind(this),this._onPointerlockError=U.bind(this),this.domElement!==null&&this.connect(this.domElement)}connect(e){super.connect(e),this.domElement.ownerDocument.addEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.addEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.addEventListener("pointerlockerror",this._onPointerlockError)}disconnect(){this.domElement.ownerDocument.removeEventListener("mousemove",this._onMouseMove),this.domElement.ownerDocument.removeEventListener("pointerlockchange",this._onPointerlockChange),this.domElement.ownerDocument.removeEventListener("pointerlockerror",this._onPointerlockError)}dispose(){this.disconnect()}getObject(){return console.warn("THREE.PointerLockControls: getObject() has been deprecated. Use controls.object instead."),this.object}getDirection(e){return e.set(0,0,-1).applyQuaternion(this.object.quaternion)}moveForward(e){if(this.enabled===!1)return;const i=this.object;c.setFromMatrixColumn(i.matrix,0),c.crossVectors(i.up,c),i.position.addScaledVector(c,e)}moveRight(e){if(this.enabled===!1)return;const i=this.object;c.setFromMatrixColumn(i.matrix,0),i.position.addScaledVector(c,e)}lock(e=!1){this.domElement.requestPointerLock({unadjustedMovement:e})}unlock(){this.domElement.ownerDocument.exitPointerLock()}}function T(t){if(this.enabled===!1||this.isLocked===!1)return;const e=this.object;r.setFromQuaternion(e.quaternion),r.y-=t.movementX*u*this.pointerSpeed,r.x-=t.movementY*u*this.pointerSpeed,r.x=Math.max(w-this.maxPolarAngle,Math.min(w-this.minPolarAngle,r.x)),e.quaternion.setFromEuler(r),this.dispatchEvent(G)}function O(){this.domElement.ownerDocument.pointerLockElement===this.domElement?(this.dispatchEvent(B),this.isLocked=!0):(this.dispatchEvent(H),this.isLocked=!1)}function U(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}const s=new x;s.background=new _(16777215);const d=new C(75,window.innerWidth/window.innerHeight,.1,1e3);d.position.set(0,1.6,5);const l=new S({antialias:!0});l.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(l.domElement);const a=new R(d,document.body);s.add(a.getObject());document.body.addEventListener("click",()=>{a.lock()});s.add(new A(8947848));const v=new D(16777215,1);v.position.set(5,5,5);s.add(v);const b=new j(1,2,32);b.center();const Y=new F({color:16733474}),Q=new p(b,Y);s.add(Q);const L=new p(new I(100,100),new K({color:15790320,side:z}));L.rotation.x=-Math.PI/2;s.add(L);const m=5,X=new Float32Array([0,0,0,m,0,0,0,0,0,0,m,0,0,0,0,0,0,m]),N=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]),h=new V;h.setAttribute("position",new g(X,3));h.setAttribute("color",new g(N,3));const Z=new W({vertexColors:!0}),J=new q(h,Z);s.add(J);const o={forward:!1,backward:!1,left:!1,right:!1};window.addEventListener("keydown",t=>{t.code==="KeyW"&&(o.forward=!0),t.code==="KeyS"&&(o.backward=!0),t.code==="KeyA"&&(o.left=!0),t.code==="KeyD"&&(o.right=!0)});window.addEventListener("keyup",t=>{t.code==="KeyW"&&(o.forward=!1),t.code==="KeyS"&&(o.backward=!1),t.code==="KeyA"&&(o.left=!1),t.code==="KeyD"&&(o.right=!1)});const n=new k,f=5;let E=performance.now();function P(){requestAnimationFrame(P);const t=performance.now(),e=(t-E)/1e3;E=t,a.isLocked&&(n.set(0,0,0),o.forward&&(n.z-=1),o.backward&&(n.z+=1),o.left&&(n.x-=1),o.right&&(n.x+=1),n.lengthSq()>0&&(n.normalize(),a.moveRight(n.x*f*e),a.moveForward(n.z*f*e))),l.render(s,d)}P();window.addEventListener("resize",()=>{const t=window.innerWidth,e=window.innerHeight;l.setSize(t,e),d.aspect=t/e,d.updateProjectionMatrix()});
